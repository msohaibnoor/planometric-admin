{"version":3,"file":"static/js/544.faece982.chunk.js","mappings":"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","sources":["shared/Card/HeadingCard.js","views/pages/projects/component/DeleteUserDialog.js","views/pages/projects/component/projectsTable.js","views/pages/projects/index.js"],"sourcesContent":["import { Box, Card, Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { forwardRef } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// constant\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst HeadingCard = forwardRef(({ title, role, value, setValue, options,marginTop }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                marginBottom: theme.spacing(gridSpacing),\r\n                border: '1px solid',\r\n                borderColor: theme.palette.primary[200] + 75,\r\n                background: theme.palette.background.default,\r\n                marginTop:marginTop ?? \"0px\"\r\n            }}\r\n        >\r\n            <Box sx={{ p: 2, pl: 2 }}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\" sx={{ fontWeight: 500, color: 'cadetblue' }}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    {value !== undefined && (\r\n                        <Grid item>\r\n                            {options && (role == 'teacher' || role == 'super_admin') && (\r\n                                <TextField\r\n                                    id=\"standard-select-currency\"\r\n                                    select\r\n                                    value={value}\r\n                                    onChange={(e) => setValue(e.target.value)}\r\n                                    sx={{ width: '150px' ,height:'44px'}}\r\n                                >\r\n                                    {options.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            )}\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default HeadingCard;\r\n","import { forwardRef, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Slide, DialogContentText, Typography } from '@mui/material';\r\nimport { FormattedMessage } from 'react-intl';\r\n// animation\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\nimport { deleteMunicipality } from '../../../../redux/municipalities/actions';\r\n\r\nexport default function DeleteUserDialog({ open, setOpen, userId, page, limit, search, type }) {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title1\"\r\n                aria-describedby=\"alert-dialog-slide-description1\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title1\">Delete Municipality</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description1\">\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Are you sure you want to delete this municipality?\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button\r\n                        sx={{ color: theme.palette.error.dark, borderColor: theme.palette.error.dark }}\r\n                        onClick={handleClose}\r\n                        color=\"secondary\"\r\n                    >\r\n                        No\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            dispatch(\r\n                                deleteMunicipality({\r\n                                    id: userId,\r\n                                    handleClose: handleClose,\r\n                                    page: page,\r\n                                    limit: limit,\r\n                                    search: search,\r\n                                    type: type\r\n                                })\r\n                            );\r\n                        }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import { forwardRef, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    IconButton,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Tooltip,\r\n    Typography,\r\n    Menu,\r\n    MenuItem,\r\n    Link\r\n} from '@mui/material';\r\nimport BlockIcon from '@mui/icons-material/Block';\r\nimport ContentCopyRoundedIcon from '@mui/icons-material/ContentCopyRounded';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport DeleteUserDialog from './DeleteUserDialog';\r\nimport moment from 'moment';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n// import IconButton from '@mui/material/IconButton';\r\n// import Tooltip from '@mui/material/Tooltip';\r\nimport { padding } from '@mui/system';\r\n\r\nconst ProjectsTable = ({ projectsList, page, limit, search, type }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = useState(false);\r\n    const [copied, setCopied] = useState(false);\r\n    const [userId, setUserId] = useState();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [selectedRow, setSelectedRow] = useState(null);\r\n    const handleClick = (event, row) => {\r\n        setSelectedRow(row);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleCopyToClipboard = (address) => {\r\n        navigator.clipboard.writeText(address);\r\n        setCopied(true);\r\n    };\r\n    return (\r\n        <TableContainer>\r\n            <DeleteUserDialog setOpen={setOpen} open={open} userId={userId} page={page} limit={limit} search={search} type={type} />\r\n\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell sx={{ pl: 3 }}>ID</TableCell>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Company name</TableCell>\r\n                        <TableCell>Address</TableCell>\r\n                        <TableCell>Recommended By</TableCell>\r\n                        <TableCell>Created At</TableCell>\r\n                        <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                            Actions\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {projectsList &&\r\n                        projectsList.projects &&\r\n                        projectsList.projects.length > 0 &&\r\n                        projectsList.projects.map((row, index) => (\r\n                            <>\r\n                                <TableRow hover key={row.id}>\r\n                                    <TableCell\r\n                                        sx={{ pl: 3 }}\r\n                                        onClick={() => {\r\n                                            console.log('row', row);\r\n                                        }}\r\n                                    >\r\n                                        {row.id}{' '}\r\n                                    </TableCell>\r\n                                    <TableCell>{`${row?.firstName} ${row?.lastName}`}</TableCell>\r\n                                    <TableCell>{row.companyName}</TableCell>\r\n                                    <TableCell>{row.address}</TableCell>\r\n                                    <TableCell>{row.recommendedBy}</TableCell>\r\n\r\n                                    <TableCell>{moment(row.createdAt).format('DD-MM-YYYY')}</TableCell>\r\n\r\n                                    <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                        {/* <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                                            <Tooltip placement=\"top\" title={row.isActive ? 'Block' : 'Unblock'}>\r\n                                                <IconButton\r\n                                                    disabled={row.isRestricted}\r\n                                                    color={row.isActive ? 'primary' : 'error'}\r\n                                                    aria-label=\"delete\"\r\n                                                    size=\"large\"\r\n                                                    onClick={() => {\r\n                                                        dispatch(\r\n                                                            changeUserStatus({\r\n                                                                id: row.id,\r\n                                                                page: page,\r\n                                                                limit: limit,\r\n                                                                search: search,\r\n                                                                type: type\r\n                                                            })\r\n                                                        );\r\n                                                    }}\r\n                                                >\r\n                                                    <BlockIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip placement=\"top\" title=\"Delete\">\r\n                                                <IconButton\r\n                                                    color=\"primary\"\r\n                                                    sx={{\r\n                                                        color: theme.palette.orange.dark,\r\n                                                        borderColor: theme.palette.orange.main,\r\n                                                        '&:hover ': { background: theme.palette.orange.light }\r\n                                                    }}\r\n                                                    size=\"large\"\r\n                                                    onClick={() => {\r\n                                                        setOpen(true);\r\n                                                        setUserId(row.id);\r\n                                                    }}\r\n                                                >\r\n                                                    <DeleteOutlineOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Stack> */}\r\n                                        <IconButton>\r\n                                            <MoreVertIcon\r\n                                                fontSize=\"large\"\r\n                                                color=\"black\"\r\n                                                aria-controls=\"menu-friend-card\"\r\n                                                aria-haspopup=\"true\"\r\n                                                sx={{ opacity: 1.6 }}\r\n                                                onClick={(e) => handleClick(e, row)}\r\n                                            />\r\n                                        </IconButton>\r\n                                        <Menu\r\n                                            id=\"menu-simple-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'left',\r\n                                                horizontal: 'left'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            sx={{ padding: '0px 8px', boxShadow: 'none' }}\r\n                                            className=\"customMenuClass\"\r\n                                        >\r\n                                            <MenuItem\r\n                                                onClick={() => {\r\n                                                    setOpen(true);\r\n                                                    setUserId(selectedRow.id);\r\n                                                    handleClose();\r\n                                                }}\r\n                                            >\r\n                                                <div className=\"actionItem\">\r\n                                                    <IconButton\r\n                                                        color=\"primary\"\r\n                                                        sx={{\r\n                                                            color: theme.palette.orange.dark,\r\n                                                            borderColor: theme.palette.orange.main,\r\n                                                            '&:hover ': { background: theme.palette.orange.light },\r\n                                                            padding: '0px'\r\n                                                        }}\r\n                                                        size=\"large\"\r\n                                                    >\r\n                                                        <DeleteOutlineOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                    </IconButton>\r\n                                                    <p>Delete</p>\r\n                                                </div>\r\n                                                {/* </Tooltip> */}\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </>\r\n                        ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default ProjectsTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { OutlinedInput, InputAdornment, Button, Grid, Typography, Pagination, Menu, MenuItem, TextField } from '@mui/material';\r\nimport ProjectsTable from './component/projectsTable';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport HeadingCard from 'shared/Card/HeadingCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { IconSearch } from '@tabler/icons';\r\nimport { getAllProjects } from '../../../redux/projects/actions';\r\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\r\n\r\nconst Users = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const projectsList = useSelector((state) => state.projects.projects);\r\n    console.log('projects');\r\n    console.log(projectsList);\r\n    const [open, setOpen] = useState(false);\r\n    const [openRestricted, setRestrictedOpen] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [limit, setLimit] = useState(10);\r\n    const [type, setType] = useState('all');\r\n\r\n    const handleType = (event) => {\r\n        setType(event.target.value);\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    useEffect(() => {\r\n        dispatch(getAllProjects());\r\n    }, [search, page, limit, type]);\r\n\r\n    return (\r\n        <>\r\n            <HeadingCard title=\"Projects\" />\r\n\r\n            <MainCard content={false}>\r\n                {projectsList && projectsList.projects && projectsList.projects.length > 0 ? (\r\n                    <>\r\n                        <ProjectsTable projectsList={projectsList && projectsList} page={page} limit={limit} search={search} type={type} />\r\n                        <Grid item xs={12} sx={{ p: 3 }}>\r\n                            <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                                <Grid item>\r\n                                    <Pagination\r\n                                        color=\"primary\"\r\n                                        showFirstButton\r\n                                        showLastButton\r\n                                        page={page}\r\n                                        count={projectsList && projectsList.pages}\r\n                                        onChange={(event, newPage) => {\r\n                                            setPage(newPage);\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button\r\n                                        size=\"large\"\r\n                                        sx={{ color: theme.palette.grey[900] }}\r\n                                        color=\"secondary\"\r\n                                        endIcon={<ExpandMoreRoundedIcon />}\r\n                                        onClick={handleClick}\r\n                                    >\r\n                                        {limit} Rows\r\n                                    </Button>\r\n                                    <Menu\r\n                                        id=\"menu-user-list-style1\"\r\n                                        anchorEl={anchorEl}\r\n                                        keepMounted\r\n                                        open={Boolean(anchorEl)}\r\n                                        onClose={handleClose}\r\n                                        variant=\"selectedMenu\"\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right'\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'right'\r\n                                        }}\r\n                                    >\r\n                                        <MenuItem\r\n                                            value={10}\r\n                                            onClick={(e) => {\r\n                                                setLimit(e.target.value);\r\n                                                setPage(1);\r\n                                                handleClose();\r\n                                            }}\r\n                                        >\r\n                                            {' '}\r\n                                            10 Rows\r\n                                        </MenuItem>\r\n                                        <MenuItem\r\n                                            value={25}\r\n                                            onClick={(e) => {\r\n                                                setLimit(e.target.value);\r\n                                                setPage(1);\r\n                                                handleClose();\r\n                                            }}\r\n                                        >\r\n                                            {' '}\r\n                                            25 Rows\r\n                                        </MenuItem>\r\n                                        <MenuItem\r\n                                            value={50}\r\n                                            onClick={(e) => {\r\n                                                setLimit(e.target.value);\r\n                                                setPage(1);\r\n                                                handleClose();\r\n                                            }}\r\n                                        >\r\n                                            {' '}\r\n                                            50 Rows{' '}\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Grid item>\r\n                            <Typography style={{ padding: '20px' }}> No Data Available</Typography>\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n            </MainCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n"],"names":["HeadingCard","forwardRef","title","role","value","setValue","options","marginTop","theme","useTheme","sx","marginBottom","spacing","gridSpacing","border","borderColor","palette","primary","background","default","p","pl","container","alignItems","justifyContent","item","variant","fontWeight","color","undefined","id","select","onChange","e","target","width","height","map","option","label","Transition","props","ref","Slide","direction","DeleteUserDialog","open","setOpen","userId","page","limit","search","type","dispatch","useDispatch","handleClose","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","Typography","component","DialogActions","pr","Button","error","dark","onClick","size","deleteMunicipality","projectsList","useNavigate","useState","setUserId","anchorEl","setAnchorEl","selectedRow","setSelectedRow","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","projects","length","row","index","hover","console","log","firstName","lastName","companyName","address","recommendedBy","moment","createdAt","format","IconButton","MoreVert","fontSize","opacity","event","currentTarget","handleClick","Menu","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","padding","boxShadow","className","MenuItem","orange","main","light","DeleteOutlineOutlined","useSelector","state","setPage","setLimit","useEffect","getAllProjects","MainCard","content","Grid","xs","Pagination","showFirstButton","showLastButton","count","pages","newPage","grey","endIcon","ExpandMoreRounded","style"],"sourceRoot":""}